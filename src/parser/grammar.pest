WHITESPACE = _{ " " | "\t" | NEWLINE }
COMMENT = _{ "#" ~ (!NEWLINE ~ ANY)* }

program = { SOI ~ statement* ~ EOI }

statement = { assignment | print_statement }

assignment_operator = @{ "=" | "+=" | "-=" | "*=" | "/=" | "%=" | "**=" | "//=" }
assignment = { identifier ~ assignment_operator ~ expression }

print_statement = { "print" ~ "(" ~ expression ~ ")" }

expression = _{ comparison } // Changed from add_sub to comparison

comparison = { add_sub ~ (comp_op ~ add_sub)* } // New rule for comparison
comp_op = @{ "==" | "!=" | ">=" | "<=" | ">" | "<" } // New comparison operators

add_sub = { mul_div_mod ~ (add_op ~ mul_div_mod)* }
add_op = @{ "+" | "-" } // Made atomic

mul_div_mod = { power ~ (mul_op ~ power)* }
mul_op = @{ "*" | "//" | "/" | "%" } // Made atomic, correct order

power = { factor ~ (pow_op ~ factor)* }
pow_op = @{ "**" } // Made atomic

factor = { integer_literal | string_literal | identifier | "(" ~ expression ~ ")" }

integer_literal = @{ ASCII_DIGIT+ }
string_literal = @{ "\"" ~ (char* ) ~ "\"" }
char = { !("\"" | "\\") ~ ANY }
identifier = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }
NEWLINE = _{ "\r"? ~ "\n" }
